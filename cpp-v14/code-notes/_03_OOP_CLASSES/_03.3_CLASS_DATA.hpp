/*
 * _03.3_CLASS_DATA.hpp
 *
 *  Created on: Apr 16, 2025
 *      Author: AhmedMontasser
 */

#ifndef _CLASS_DATA_HPP_
#define _CLASS_DATA_HPP_

class Data {
	int d1 {0};
	int d2 {0};
public:
	/* Keyword: default "Functions":-
	 * -------------------------------
	 * Allow Compiler to automatically generate the function.
	 * - Can be used with any function/method that can be auto-generated by compiler.
	 * - Mandatory if you didn't implement the function by yourself.
	 * - Better to set them even if in situation, they are optional.
	 *
	 * In below Example Default Constructor and Destructor is set to default:
	 * 	inform the Compiler to generate it.
	 */
	Data() = default;		// Mandatory.. because i already started to define user-defined constructor .. and i am creating instance using default form.
	// if no constructors were implemented, it can be optional also like destructor.

	//Data(const Data& refObj) = default;		// Not Mandatory... because by default Compiler will Generate..



	/* Keyword: delete "Functions":-
	 * -------------------------------
	 * To tell/force the Compiler NOT TO auto-generate a certain function.
	 *
	 * In below Example I am deleting the Copy Constructor
	 */
	Data(const Data& refObj) = delete;

	Data(int n1, int n2);	// user-defined
	~Data() = default;		// Not Mandatory... because by default Compiler will Generate..

	void setValue(int value);
	/*
	 * Another Example for delete: can be with normal functions also.
	 * forcing the compiler not to accept function call with float value ONLY int.
	 * so the compiler will not invoke the setValue(int) automatically
	 */
	void setValue(float) = delete;
};


#endif /* _CLASS_DATA_HPP_ */
